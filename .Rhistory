#Punto 3 c
names(df2)
require(pacman)
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics) # web-scraping
set.seed(1000)
#Establecer directorio de trabajo
setwd("C:/Users/Diego/OneDrive/Documents/GitHub/BD-ML---PS1")
getwd()
#Establecer directorio de trabajo
setwd("C:/Users/danie/OneDrive/Escritorio/Uniandes/PEG/Big Data and Machine Learning/BD-ML---PS1")
# cargar la base
df2 <- read.csv("datafiltrada.csv")
View(df2)
# mutate(x=var):permite crear nuevas variables a partir de otras variables para construir funciones f(y), f(x)
df2 <- df2%>%mutate(age2=age^2)
df2 <- df2%>%mutate(inglabo=impa+isa)
# mutate(var=dep)
df2 <- df2%>%mutate(female = 1-sex)
# guardar/escribirlas bases de datos en csv en el wd establecido
write.csv(df2, "datafiltrada.csv")
#Punto 3 c
names(df2)
dfBase <- df2[c("age", "age2", "female", "clase", "P6210", "p6210s1", "College", "cotPension", "cuentaPropia", "estrato1", "fex_c", "formal", "fweight", "hoursWorkUsual", "inglabo", "ingtot", "impa", "isa", "maxEducLevel", "mes", "microEmpresa", "oficio", "P6050","P6426", "y_ingLab_m", "y_ingLab_m_ha", "y_salarySec_m", "y_salary_m_hu", "y_total_m", "y_total_m_ha")]
dfBase <- df2[c("age", "age2", "female", "clase", "P6210", "P6210s1", "College", "cotPension", "cuentaPropia", "estrato1", "fex_c", "formal", "fweight", "hoursWorkUsual", "inglabo", "ingtot", "impa", "isa", "maxEducLevel", "mes", "microEmpresa", "oficio", "P6050","P6426", "y_ingLab_m", "y_ingLab_m_ha", "y_salarySec_m", "y_salary_m_hu", "y_total_m", "y_total_m_ha")]
dfBase <- df2[c("age", "age2")]
dfBase <- df2[c("age", "age2", "female", "clase", "p6210", "p6210s1", "college", "cotPension", "cuentaPropia", "estrato1", "fex_c", "formal", "fweight", "hoursWorkUsual", "inglabo", "ingtot", "impa", "isa", "maxEducLevel", "mes", "microEmpresa", "oficio", "p6050","p6426", "y_ingLab_m", "y_ingLab_m_ha", "y_salarySec_m", "y_salary_m_hu", "y_total_m", "y_total_m_ha")]
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics, lfe) # web-scraping
set.seed(1000)
table(dfBase$maxEducLevel)
table(dfBase$p6210s1)
table(dfBase$p6210)
modelo_prueba <- lm(data = dfBase, y_total_m ~ age*female+age2*female+factor(maxEducLevel))
summary(modelo_prueba)
modelo_prueba_2 <- felm(y_total_m ~ age*female+age2*female|factor(maxEducLevel), data = dfBase)
summary(modelo_prueba_2)
modelo_prueba_2 <- felm(y_total_m ~ age*female+age2*female|factor(maxEducLevel)+factor(oficio), data = dfBase)
summary(modelo_prueba_2)
modelo_prueba <- lm(data = dfBase, y_total_m ~ age*female+age2*female+factor(maxEducLevel)+factor(oficio))
summary(modelo_prueba)
require(pacman)
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics, lfe) # web-scraping
# read_csv(file):  cargar database
df <- read.csv("dataoriginal.csv")
df2 <- read.csv("datafiltrada.csv")
# scatter con puntos de edad vs ingreso total b4
ggplot(df2, aes(x = age, y = log(ingtot)))+
geom_point()+
geom_smooth(method = "loess", level = 0.95, aes(weight = fex_c))+
ggtitle("Ingreso total según la edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso total")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
#Scatter del y_laboral vs edad
ggplot(df2, aes(x = age, y = log(df2$y_ingLab_m)))+
geom_point()+
geom_smooth(method = "loess", level = 0.95, aes(weight = fex_c))+
ggtitle("Ingreso total según la edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral mensual")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
#Scatter del y_laboral vs edad
ggplot(df2, aes(x = age, y = log(df2$y_ingLab_m)))+
geom_point()+
geom_smooth(method = "loess", level = 0.95, aes(weight = fex_c))+
ggtitle("Perfil de ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral mensual")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
#Scatter del y_laboral vs edad
ggplot(df2, aes(x = age, y = log(y_ingLab_m)))+
geom_point()+
geom_smooth(method = "loess", level = 0.95, aes(weight = fex_c))+
ggtitle("Perfil de ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral mensual")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
eta.fn_1<-function(data,index){
coef(lm(y_ingLab_m~age+age2, data = df2, weights = fex_c, subset = index))
}
# boot(data, eta_func, R=N)
boot1 <- boot(df2, eta.fn_1, R = 1000)
boot1
eta.fn_2<-function(data,index){
coef(lm(log(y_ingLab_m)~age+age2, data = df2, weights = fex_c, subset = index))
}
boot2 <- boot(df2, eta.fn_2, R = 1000)
boot2
#Sacar la tabla
stargazer(boot1, type = "html", title = "Estadísticas Descriptivas", out = "estdec.html")
#Sacar la tabla
stargazer(boot1, type = "html", title = "Estadísticas Descriptivas", out = "estdec.html")
boot1 <- as.data.frame(boot1)
output_boot1 <- t(rbind(boot1$t0, apply(boot1$t, 2, function(x) sd(x))))
#Sacar la tabla
stargazer(output_boot1, type = "html", title = "Estadísticas Descriptivas", out = "estdec.html")
#Sacar la tabla
stargazer(output_boot1, type = "html", title = "modelo1", out = "estdec.html")
#Sacar la tabla
stargazer(output_boot1, type = "html", title = "modelo1", out = "mod1.html")
boot2
output_boot2 <- t(rbind(boot2$t0, apply(boot2$t, 2, function(x) sd(x))))
#Sacar la tabla
stargazer(output_boot1, output_boot2, type = "html", title = "modelo1", out = "mod1.html")
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics, lfe) # web-scraping
require(pacman)
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics, lfe) # web-scraping
#Sacar la tabla
stargazer(output_boot1, output_boot2, type = "html", title = "modelo1", out = "mod1.html")
#Sacar la tabla
stargazer(output_boot1, type = "html", title = "Ingreso laboral", out = "mod1.html")
stargazer(output_boot2, type = "html", title = "Logaritmo del Ingreso laboral", out = "mod2.html")
boot(df2, eta.fn_2, R = 1000)
#Age peak: igualar la función derivada de y = 0
age_peak <- -(boot2$t0[2]/(2*boot2$t0[3]))
boot2$t0[2]
boot2$t0[3]
#Age peak: igualar la función derivada de y = 0
age_peak1 <- -(boot1$t0[2]/(2*boot1$t0[3]))
age_peak2 <- -(boot2$t0[2]/(2*boot2$t0[3]))
# mutate(x=var):permite crear nuevas variables a partir de otras variables para construir funciones f(y), f(x)
# inglabo_hat(fun_predic), inglabo_hat_nolog(fun_predic)
df2 <- df2%>%mutate(inglabo_hat = exp(boot2$t0[1]+boot2$t0[2]*age+boot2$t0[3]*age2))
df2 <- df2%>%mutate(inglabo_hat_nolog = boot1$t0[1]+boot1$t0[2]*age+boot1$t0[3]*age2)
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_point()+
geom_smooth(method = "loess", level = 0.95, aes(weight = fex_c))+
ggtitle("Ingreso total según la edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso total")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_point()+
ggtitle("Ingreso total según la edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso total")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Ingreso total según la edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso total")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_point()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
set.seed(1000)
require(pacman)
p_load(tidyverse, # contiene las librerías ggplot, dplyr...
rvest, data.table, dplyr, skimr, # summary data
caret, rio, vtable, stargazer, ggplot2, boot, MLmetrics, lfe) # web-scraping
#Age peak: igualar la función derivada de y = 0
age_peak1 <- -(boot1$t0[2]/(2*boot1$t0[3]))
age_peak2 <- -(boot2$t0[2]/(2*boot2$t0[3]))
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado")+
theme_classic()+
ylim(200,1600)
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado")+
theme_classic()+
ylim(200,1600)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,1600)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
age_peaklog <- -(boot2$t0[2]/(2*boot2$t0[3]))
#Age peak: igualar la función derivada de y = 0
age_peak1 <- -(boot1$t0[2]/(2*boot1$t0[3]))
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,1600)+
geom_vline(xintercept = 48.5, linetype="dotted", color = "red", size=1.5)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,1600)+
geom_vline(xintercept = 48.5, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,1600)+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1.5)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
geom_vline(xintercept = 48.5, linetype="dotted", color = "red", size=1.5)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1.5)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
eta.fn_1<-function(data,index){
coef(lm(y_ingLab_m~age+age2, data = df2, weights = fex_c, subset = index))
}
# boot(data, eta_func, R=N)
boot1 <- boot(df2, eta.fn_1, R = 1000)
boot(df2, eta.fn_1, R = 1000)
output_boot1 <- t(rbind(boot1$t0, apply(boot1$t, 2, function(x) sd(x))))
output_boot1
boot1$t0[2]
boot1$t0[3]
#Age peak: igualar la función derivada de y = 0
age_peak1 <- -(boot1$t0[2]/(2*boot1$t0[3]))
ggplot(df2, aes(x = age, y = inglabo_hat_nolog/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,1600)+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat_nolog/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,3000)+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat_nolog/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,2500)+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat_nolog/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,2500)+
geom_vline(xintercept = 48.5, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
# gráfico solo con valores predichos g5
ggplot(df2, aes(x = age, y = log(inglabo_hat)))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Logaritmo del ingreso laboral estimado")+
theme_classic()+
geom_vline(xintercept = 43.1, linetype="dotted", color = "red", size=1.5)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
ggplot(df2, aes(x = age, y = inglabo_hat_nolog/1000))+
geom_line()+
ggtitle("Perfil ingreso laboral y edad")+
xlab("Edad")+
ylab("Ingreso laboral estimado en miles")+
theme_classic()+
ylim(200,2500)+
geom_vline(xintercept = 48.5, linetype="dotted", color = "red", size=1)+
theme(plot.title = element_text(hjust = 0.5, size = 20), axis.title.x = element_text(hjust = 0.5, size = 16), axis.title.y = element_text(hjust = 0.5, size = 16), axis.text = element_text(size = 14) )
